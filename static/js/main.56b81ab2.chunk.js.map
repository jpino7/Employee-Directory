{"version":3,"sources":["components/Header.js","components/DataBody.js","components/DataTable.js","components/SearchBox.js","components/Nav.js","utils/API.js","components/DataArea.js","components/Main.js","components/Footer.js","components/Wrapper.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","src","alt","Component","DataBody","users","undefined","name","map","login","picture","phone","email","dob","key","uuid","data-th","medium","first","last","href","target","date","dateArray","split","year","join","formatDate","DataTable","headings","handleSort","id","width","style","onClick","toLowerCase","SearchBox","handleSearchChange","type","placeholder","aria-label","onChange","e","Nav","axios","get","DataArea","state","order","filteredUsers","heading","setState","sortedUsers","sort","a","b","localeCompare","event","console","log","value","filter","filteredList","item","Object","values","indexOf","API","then","results","data","this","Main","Footer","Wrapper","children","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"sYAGqBA,G,6KAEb,OACI,yBAAKC,UAAU,UACX,kDACA,yBAAKA,UAAU,OAAOC,IAAI,wCAAwCC,IAAI,4BACtE,2F,GANoBC,cC+CrBC,MAhDf,YAA8B,IAAVC,EAAS,EAATA,MAWlB,OACE,oCACgBC,IAAbD,EAAM,SAAsCC,IAAlBD,EAAM,GAAGE,KAClCF,EAAMG,KAAI,YAAkD,IAA/CC,EAA8C,EAA9CA,MAAOF,EAAuC,EAAvCA,KAAMG,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAC/C,OACE,wBAAIC,IAAKL,EAAMM,MACb,wBAAIC,UAAQ,QAAQhB,UAAU,gBAC5B,yBACEC,IAAKS,EAAQO,OACbf,IAAK,qBAAuBK,EAAKW,MAAQ,IAAMX,EAAKY,KACpDnB,UAAU,oBAGd,wBAAIgB,UAAQ,OAAOhB,UAAU,0BAC1BO,EAAKW,MADR,IACgBX,EAAKY,MAErB,wBAAIH,UAAQ,QAAQhB,UAAU,gBAC3BW,GAEH,wBAAIK,UAAQ,QAAQhB,UAAU,gBAC5B,uBAAGoB,KAAM,UAAYR,EAAOS,OAAO,WAChCT,IAGL,wBAAII,UAAQ,SAAShB,UAAU,gBAlC3C,SAAoBsB,GAClB,IAAMC,EAAYD,EAAKE,MAAM,KACvBC,EAAOF,EAAU,GAKvB,MADsB,CAHRA,EAAU,GACPA,EAAU,GAAGC,MAAM,KACf,GACcC,GAAMC,KAAK,KA6BjCC,CAAWd,EAAIS,WAMxB,uC,MCROM,MAhCf,YAAqD,IAAhCC,EAA+B,EAA/BA,SAAUxB,EAAqB,EAArBA,MAAOyB,EAAc,EAAdA,WACpC,OACE,yBAAK9B,UAAU,kBACb,2BACE+B,GAAG,QACH/B,UAAU,mDAEV,+BACE,4BACG6B,EAASrB,KAAI,YAAsB,IAAnBD,EAAkB,EAAlBA,KAAMyB,EAAY,EAAZA,MACrB,OACE,wBACEhC,UAAU,MACVc,IAAKP,EACL0B,MAAO,CAAED,SACTE,QAAS,WACPJ,EAAWvB,EAAK4B,iBAGjB5B,QAOX,kBAAC,EAAD,CAAUF,MAAOA,OCbV+B,MAff,YAA4C,IAAvBC,EAAsB,EAAtBA,mBACnB,OACE,yBAAKrC,UAAU,aACb,0BAAMA,UAAU,eACd,2BACEA,UAAU,eACVsC,KAAK,SACLC,YAAY,SACZC,aAAW,SACXC,SAAU,SAAAC,GAAC,OAAIL,EAAmBK,S,MCE7BC,MATf,YAAsC,IAAvBN,EAAsB,EAAtBA,mBACb,OACE,yBAAKrC,UAAU,8CACb,yBAAKA,UAAU,sBAAsB+B,GAAG,aACtC,kBAAC,EAAD,CAAWM,mBAAoBA,O,iBCNxB,EAEH,WACR,OAAOO,IAAMC,IAAI,kDCEAC,G,kNACjBC,MAAQ,CACJ1C,MAAO,CAAC,IACR2C,MAAO,UACPC,cAAe,CAAC,K,EAGpBpB,SAAW,CACP,CAAEtB,KAAM,QAASyB,MAAO,OACxB,CAAEzB,KAAM,OAAQyB,MAAO,OACvB,CAAEzB,KAAM,QAASyB,MAAO,OACxB,CAAEzB,KAAM,QAASyB,MAAO,OACxB,CAAEzB,KAAM,SAAUyB,MAAO,Q,EAG7BF,WAAa,SAAAoB,GACgB,YAArB,EAAKH,MAAMC,MACX,EAAKG,SAAS,CACVH,MAAO,WAGX,EAAKG,SAAS,CACVH,MAAO,YAIf,IA+BMI,EAAc,EAAKL,MAAME,cAAcI,MA/BrB,SAACC,EAAGC,GACxB,MAAyB,WAArB,EAAKR,MAAMC,WAEQ1C,IAAfgD,EAAEJ,GACK,OACe5C,IAAfiD,EAAEL,IACD,EAGS,SAAZA,EACEI,EAAEJ,GAAShC,MAAMsC,cAAcD,EAAEL,GAAShC,OAE1CoC,EAAEJ,GAAWK,EAAEL,QAIP5C,IAAfgD,EAAEJ,GACK,OACe5C,IAAfiD,EAAEL,IACD,EAGS,SAAZA,EACEK,EAAEL,GAAShC,MAAMsC,cAAcF,EAAEJ,GAAShC,OAE1CqC,EAAEL,GAAWI,EAAEJ,MAOlC,EAAKC,SAAS,CAAEF,cAAeG,K,EAGnCf,mBAAqB,SAAAoB,GACjBC,QAAQC,IAAIF,EAAMpC,OAAOuC,OACzB,IAAMC,EAASJ,EAAMpC,OAAOuC,MACtBE,EAAe,EAAKf,MAAM1C,MAAMwD,QAAO,SAAAE,GAKzC,OAAiD,IAHpCC,OAAOC,OAAOF,GACtBrC,KAAK,IACLS,cACS+B,QAAQL,EAAO1B,kBAEjC,EAAKgB,SAAS,CAAEF,cAAea,K,kEAEd,IAAD,OAChBK,IAAeC,MAAK,SAAAC,GAChB,EAAKlB,SAAS,CACV9C,MAAOgE,EAAQC,KAAKD,QACpBpB,cAAeoB,EAAQC,KAAKD,e,+BAMpC,OACI,oCACI,kBAAC,EAAD,CAAKhC,mBAAoBkC,KAAKlC,qBAC9B,yBAAKrC,UAAU,aACX,kBAAC,EAAD,CACI6B,SAAU0C,KAAK1C,SACfxB,MAAOkE,KAAKxB,MAAME,cAClBnB,WAAYyC,KAAKzC,mB,GA1FH3B,cCJjBqE,E,uKAEjB,OACE,oCACE,kBAAC,EAAD,W,GAJ0BrE,aCUnBsE,G,YATO,WAClB,OAEI,4BAAQzE,UAAU,UACd,wECEK0E,MARjB,YAAgC,IAAbC,EAAY,EAAZA,SACf,OACI,yBAAK3E,UAAU,WACX2E,ICcGC,MAZf,WACE,OACE,yBAAK5E,UAAU,OACb,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,SCDY6E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,SD2HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpB,MAAK,SAAAqB,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLlC,QAAQkC,MAAMA,EAAMC,c","file":"static/js/main.56b81ab2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport \"../styles/Header.css\";\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"header\">\r\n                <h1>Employee Directory</h1>\r\n                <img className=\"logo\" src=\"./images/red-folder-business-user.png\" alt=\"Employee Directory Logo\" />\r\n                <p>Hover over NAME heading and click to sort by First Name</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nfunction DataBody({ users }) {\r\n  function formatDate(date) {\r\n    const dateArray = date.split(\"-\");\r\n    const year = dateArray[0];\r\n    const month = dateArray[1];\r\n    const dayArray = dateArray[2].split(\"T\");\r\n    const day = dayArray[0];\r\n    const formattedDate = [month, day, year].join(\"-\");\r\n    return formattedDate;\r\n  }\r\n\r\n  return (\r\n    <tbody>\r\n      {users[0] !== undefined && users[0].name !== undefined ? (\r\n        users.map(({ login, name, picture, phone, email, dob }) => {\r\n          return (\r\n            <tr key={login.uuid}>\r\n              <td data-th=\"IMAGE\" className=\"align-middle\">\r\n                <img\r\n                  src={picture.medium}\r\n                  alt={\"profile image for \" + name.first + \" \" + name.last}\r\n                  className=\"img-responsive\"\r\n                />\r\n              </td>\r\n              <td data-th=\"NAME\" className=\"name-cell align-middle\">\r\n                {name.first} {name.last}\r\n              </td>\r\n              <td data-th=\"PHONE\" className=\"align-middle\">\r\n                {phone}\r\n              </td>\r\n              <td data-th=\"EMAIL\" className=\"align-middle\">\r\n                <a href={\"mailto:\" + email} target=\"__blank\">\r\n                  {email}\r\n                </a>\r\n              </td>\r\n              <td data-th=\"D.O.B.\" className=\"align-middle\">\r\n                {formatDate(dob.date)}\r\n              </td>\r\n            </tr>\r\n          );\r\n        })\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </tbody>\r\n  );\r\n}\r\n\r\nexport default DataBody;","import React from \"react\";\r\nimport DataBody from \"./DataBody\";\r\nimport \"../styles/DataTable.css\";\r\n\r\nfunction DataTable({ headings, users, handleSort }) {\r\n  return (\r\n    <div className=\"datatable mt-5\">\r\n      <table\r\n        id=\"table\"\r\n        className=\"table table-striped table-hover table-condensed\"\r\n      >\r\n        <thead>\r\n          <tr>\r\n            {headings.map(({ name, width }) => {\r\n              return (\r\n                <th\r\n                  className=\"col\"\r\n                  key={name}\r\n                  style={{ width }}\r\n                  onClick={() => {\r\n                    handleSort(name.toLowerCase());\r\n                  }}\r\n                >\r\n                  {name}\r\n                </th>\r\n              );\r\n            })}\r\n          </tr>\r\n        </thead>\r\n\r\n        <DataBody users={users} />\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DataTable;","import React from \"react\";\r\n\r\nfunction SearchBox({ handleSearchChange }) {\r\n  return (\r\n    <div className=\"searchBox\">\r\n      <form className=\"form-inline\">\r\n        <input\r\n          className=\"form-control\"\r\n          type=\"search\"\r\n          placeholder=\"Search\"\r\n          aria-label=\"Search\"\r\n          onChange={e => handleSearchChange(e)}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nexport default SearchBox;","import React from \"react\";\r\nimport SearchBox from \"./SearchBox.js\";\r\nimport \"../styles/Nav.css\";\r\n\r\nfunction Nav({ handleSearchChange }) {\r\n  return (\r\n    <nav className=\"navbar navbar-expand navbar-light bg-light\">\r\n      <div className=\"navbar-collapse row\" id=\"navbarNav\">\r\n        <SearchBox handleSearchChange={handleSearchChange} />\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nexport default Nav;","import axios from \"axios\";\r\n\r\nexport default {\r\n  // Gets all users\r\n  getUsers: function() {\r\n    return axios.get(\"https://randomuser.me/api/?results=200&nat=us\");\r\n  }\r\n};","import React, { Component } from 'react'\r\nimport DataTable from \"./DataTable\";\r\nimport Nav from \"./Nav\";\r\nimport API from \"../utils/API\";\r\nimport \"../styles/DataArea.css\";\r\n\r\n\r\nexport default class DataArea extends Component {\r\n    state = {\r\n        users: [{}],\r\n        order: \"descend\",\r\n        filteredUsers: [{}]\r\n    }\r\n\r\n    headings = [\r\n        { name: \"IMAGE\", width: \"10%\" },\r\n        { name: \"NAME\", width: \"10%\" },\r\n        { name: \"PHONE\", width: \"20%\" },\r\n        { name: \"EMAIL\", width: \"20%\" },\r\n        { name: \"D.O.B.\", width: \"10%\" }\r\n    ]\r\n\r\n    handleSort = heading => {\r\n        if (this.state.order === \"descend\") {\r\n            this.setState({\r\n                order: \"ascend\"\r\n            })\r\n        } else {\r\n            this.setState({\r\n                order: \"descend\"\r\n            })\r\n        }\r\n\r\n        const compareFunction = (a, b) => {\r\n            if (this.state.order === \"ascend\") {\r\n                // Account for missing values\r\n                if (a[heading] === undefined) {\r\n                    return 1;\r\n                } else if (b[heading] === undefined) {\r\n                    return -1;\r\n                }\r\n                // Numerically\r\n                else if (heading === \"name\") {\r\n                    return a[heading].first.localeCompare(b[heading].first);\r\n                } else {\r\n                    return a[heading] - b[heading];\r\n                }\r\n            } else {\r\n                // Account for missing values\r\n                if (a[heading] === undefined) {\r\n                    return 1;\r\n                } else if (b[heading] === undefined) {\r\n                    return -1;\r\n                }\r\n                // Numerically\r\n                else if (heading === \"name\") {\r\n                    return b[heading].first.localeCompare(a[heading].first);\r\n                } else {\r\n                    return b[heading] - a[heading];\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        const sortedUsers = this.state.filteredUsers.sort(compareFunction);\r\n        this.setState({ filteredUsers: sortedUsers });\r\n    }\r\n\r\n    handleSearchChange = event => {\r\n        console.log(event.target.value);\r\n        const filter = event.target.value;\r\n        const filteredList = this.state.users.filter(item => {\r\n            // Merge data together, then see if user input is anywhere inside\r\n            let values = Object.values(item)\r\n                .join(\"\")\r\n                .toLowerCase();\r\n            return values.indexOf(filter.toLowerCase()) !== -1;\r\n        });\r\n        this.setState({ filteredUsers: filteredList });\r\n    }\r\n    componentDidMount() {\r\n        API.getUsers().then(results => {\r\n            this.setState({\r\n                users: results.data.results,\r\n                filteredUsers: results.data.results\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Nav handleSearchChange={this.handleSearchChange} />\r\n                <div className=\"data-area\">\r\n                    <DataTable\r\n                        headings={this.headings}\r\n                        users={this.state.filteredUsers}\r\n                        handleSort={this.handleSort}\r\n                    />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport DataArea from \"./DataArea\";\r\n\r\nexport default class Main extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <DataArea />\r\n      </>\r\n    );\r\n  }\r\n}","import React from 'react'\r\nimport \"../styles/Footer.css\";\r\n\r\n\r\nexport const Footer = () => {\r\n    return (\r\n\r\n        <footer className=\"footer\">\r\n            <p>© 2020 Copyright • Joanna Pino</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction Wrapper({ children }) {\r\n    return (\r\n        <div className=\"wrapper\">\r\n          { children }\r\n        </div>\r\n    );\r\n  }\r\n  \r\n  export default Wrapper;","import React from 'react';\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport './App.css';\nimport Footer from \"./components/Footer\";\nimport Wrapper from './components/Wrapper';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Wrapper>\n        <Header />\n        <Main />\n        <Footer />\n      </Wrapper>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}